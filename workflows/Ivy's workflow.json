{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Hacker News",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Airtable2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-13T16:42:34.525Z",
  "id": "OXENbdRctVLWq8I7",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Ivy's workflow",
  "nodes": [
    {
      "parameters": {},
      "id": "d93ed6b8-66a7-45b6-b1fc-01c70f88c3ea",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        360,
        260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://internal.users.n8n.cloud/webhook/custom-erp",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "unique_id",
              "value": "7d2c994763d457acf9f0f7cb0b6c907a"
            }
          ]
        },
        "options": {}
      },
      "id": "cd741086-fcec-4e36-8829-06d69023d22e",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        580,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "ZToP3wjogX0YQtkQ",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "resource": "all",
        "limit": 10,
        "additionalFields": {
          "keyword": "automation"
        }
      },
      "id": "3ae599b0-3551-40b2-8d1c-fd71704be560",
      "name": "Hacker News",
      "type": "n8n-nodes-base.hackerNews",
      "typeVersion": 1,
      "position": [
        580,
        560
      ],
      "notesInFlow": true,
      "disabled": true
    },
    {
      "parameters": {
        "content": "## LEVEL 1\n[Level 1](https://docs.n8n.io/courses/level-one/)",
        "color": 6
      },
      "id": "19b60612-03f7-4788-bf55-3ca144f79e86",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        80,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "655b8992-381e-41fd-85a0-efc8753bb403",
              "leftValue": "={{$json[\"orderStatus\"]}}",
              "rightValue": "processing",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "f4dc0a83-c491-4d21-b1c7-c8018e10abd4",
              "leftValue": "={{ $json.employeeName }}",
              "rightValue": "Mario",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5456ee75-2f94-46cd-8c8f-ef227fd64a2c",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.1,
      "position": [
        820,
        260
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7a3e8458-7807-47ff-aed9-73542fd83b65",
              "name": "orderID",
              "value": "={{ $json.orderID }}",
              "type": "number"
            },
            {
              "id": "919d8bb3-25a9-4741-990e-5559ca3a15dd",
              "name": "employeeName",
              "value": "={{ $json.employeeName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "da71c79b-18e0-4312-90f3-cdefd4a92f98",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1340,
        160
      ]
    },
    {
      "parameters": {
        "jsCode": "let items = $input.all();\nlet totalBooked = items.length;\nlet bookedSum = 0;\n\nfor(let i=0; i < items.length; i++) {\n  bookedSum = bookedSum + items[i].json.orderPrice;\n}\nreturn [{json:{totalBooked, bookedSum}}];"
      },
      "id": "4a9d35c7-b18a-41e5-8fd7-da0a5f837ee6",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        380
      ]
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appq0K6ctwbu51LxZ",
          "mode": "list",
          "cachedResultName": "beginner course",
          "cachedResultUrl": "https://airtable.com/appq0K6ctwbu51LxZ"
        },
        "table": {
          "__rl": true,
          "value": "tblPR7t36SQZGMAsg",
          "mode": "list",
          "cachedResultName": "orders",
          "cachedResultUrl": "https://airtable.com/appq0K6ctwbu51LxZ/tblPR7t36SQZGMAsg"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "orderID",
              "displayName": "orderID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "customerID",
              "displayName": "customerID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "employeeName",
              "displayName": "employeeName",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "orderPrice",
              "displayName": "orderPrice",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "number",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "orderStatus",
              "displayName": "orderStatus",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "b8a76994-7775-434a-a19a-64e43e7ce22c",
      "name": "Airtable2",
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        1560,
        160
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "LcmcO2YtnFioIe45",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=Ivy This week we've {{$json[\"totalBooked\"]}} booked orders with a total value of {{$json[\"bookedSum\"]}}. My Unique ID: {{ $('HTTP Request').params[\"headerParameters\"][\"parameters\"][0][\"value\"] }}",
        "options": {}
      },
      "id": "6d820ae0-a3b9-44c9-93ec-8e3e3ca2a98e",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1320,
        380
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "48N3rSIKg1EkK9vD",
          "name": "Discord Webhook N8N"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 9
            }
          ]
        }
      },
      "id": "819f287d-372b-4f81-a659-a4f6ed04bae5",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        360,
        60
      ]
    },
    {
      "parameters": {
        "jsCode": "let items = $input.all();\nlet totalBooked = items.length;\nlet bookedSum = 0;\n\nfor(let i=0; i < items.length; i++) {\n  bookedSum = bookedSum + items[i].json.orderPrice;\n}\nreturn [{json:{totalBooked, bookedSum}}];"
      },
      "id": "e044c08e-7e50-41b5-adab-fa6e33e4f6bc",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        60
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "saveExecutionProgress": true
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-09-13T19:25:45.046Z",
      "updatedAt": "2024-09-13T19:25:45.046Z",
      "id": "FSM763DI4O0MPAyM",
      "name": "Level 1 N8N"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-09-13T23:56:27.000Z",
  "versionId": "aeb227f1-a67d-4dcb-9192-efdc42390455"
}