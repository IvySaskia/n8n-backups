{
  "active": false,
  "connections": {
    "Editor": {
      "main": [
        [
          {
            "node": "Create title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Writers": {
      "main": [
        [
          {
            "node": "Merge chapters title and text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create title": {
      "main": [
        [
          {
            "node": "Ghost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Content Analyst": {
      "main": [
        [
          {
            "node": "Project Planner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Project Planner": {
      "main": [
        [
          {
            "node": "Delegate to Writers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n Form Trigger": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Content Analyst",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Content Analyst",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Final article text": {
      "main": [
        [
          {
            "node": "Editor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Editor",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Create title",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Writers",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Delegate to Writers": {
      "main": [
        [
          {
            "node": "Merge chapters title and text",
            "type": "main",
            "index": 1
          },
          {
            "node": "Writers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge chapters title and text": {
      "main": [
        [
          {
            "node": "Final article text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-16T13:35:23.388Z",
  "id": "xHv2k0ALzF7wHOVA",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Multi-Agent PDF-to-Blog Content Generation",
  "nodes": [
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "a7d8b12f-cceb-4cfa-837e-2eb00fc0e548",
      "name": "Merge chapters title and text",
      "type": "n8n-nodes-base.merge",
      "position": [
        2980,
        340
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "jsCode": "let article = \"\";\n\n// Introduction\narticle += $('Project Planner').first().json.message.content.introduction;\n\nfor (const item of $input.all()) {\n  article += \"<strong>\" + item.json.title + \"</strong>\";\n  article += item.json.output;\n  article += \"<br>\";\n}\n\n// Conclusions\narticle += \"<strong> Conclusions </strong>\";\narticle += $('Project Planner').first().json.message.content.conclusions;\n\n\nreturn [\n  {\n    \"article\": article\n  }\n];"
      },
      "id": "22258de0-296c-4aa4-b431-4c626d165d4a",
      "name": "Final article text",
      "type": "n8n-nodes-base.code",
      "position": [
        3240,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "path": "f3822072-36a2-4f5a-8fe8-ca4b513f354c",
        "formTitle": "PDF",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Tone",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Professional"
                  },
                  {
                    "option": "Causal"
                  },
                  {
                    "option": "Witty"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Number of words",
              "placeholder": "1000",
              "requiredField": true
            },
            {
              "fieldLabel": "Number of sections",
              "placeholder": "6",
              "requiredField": true
            },
            {
              "fieldLabel": "File",
              "fieldType": "file",
              "multipleFiles": false,
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "id": "656f05c7-f727-4239-bea9-2e89c623183d",
      "name": "n8n Form Trigger",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        1000,
        340
      ],
      "webhookId": "f3822072-36a2-4f5a-8fe8-ca4b513f354c",
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "File",
        "options": {}
      },
      "id": "3d0fa2ec-3d3f-4e3f-b1a6-3a85abd5b88a",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        1240,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {}
      },
      "id": "53e70f6a-d589-43b8-8b70-e5f7c34b4bd6",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        3740,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "source": "adminApi",
        "operation": "create",
        "title": "={{ $json.text }}",
        "content": "={{ $('Editor').item.json.output }}",
        "additionalFields": {}
      },
      "id": "9223dd8a-c733-4caa-adbb-96037d58f4a5",
      "name": "Ghost",
      "type": "n8n-nodes-base.ghost",
      "position": [
        4260,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldToSplitOut": "message.content.chapters",
        "options": {}
      },
      "id": "12800a13-fec6-4d9e-8135-76b87099b837",
      "name": "Delegate to Writers",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        2260,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=Article to edit:\n {{ $json.article }}\n\nProvide polished output in html format. ",
        "options": {
          "systemMessage": "=You are an expert Editor specializing in refining and polishing content to ensure it meets the highest quality standards. Your role is to review and improve the written material produced by the Writer. Your task is to provide an highly polished article. \n\nInstructions:\n1. Carefully read the entire content piece.\n2. Check for grammar, spelling, and punctuation errors.\n3. Ensure consistency in tone, style, and voice throughout the piece.\n4. Verify that the content aligns with the original brief and project requirements.\n5. Improve sentence structure and flow for better readability.\n6. Fact-check and verify the accuracy of information and citations.\n7. Optimize headlines, subheadings, and formatting for better engagement.\n8. Suggest improvements or additions to enhance the overall quality of the content.\n\n"
        }
      },
      "id": "4fcf9b4d-d640-4c39-b7ca-4aa1cca5d807",
      "name": "Editor",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        3460,
        340
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Suggest an engaging title based on the following article.  Please use plain text, no formating of any kind.\n {{ $json.output }}"
      },
      "id": "188f2073-a189-4ad8-b453-2fc25312a32a",
      "name": "Create title",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        3940,
        340
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {}
      },
      "id": "7abd5b3f-c2cc-4767-81a5-9379da1f3ee4",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1440,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "You are a Content Analyst specialized in document analysis and content structuring. Your task is to analyze a given document and create a comprehensive table of contents that can serve as the basis for a blog post. Follow these steps:\n\n1. Carefully read and understand the entire document provided.\n\n2. Identify the main topic or theme of the document.\n\n3. Recognize the key points, arguments, or sections within the document.\n\n4. Organize these key elements into a logical and hierarchical structure.\n\n5. Create a table of contents with main sections and subsections that accurately reflect the document's content and flow.\n\n6. Ensure that the table of contents is suitable for a blog post format, with clear and engaging headings.\n\n7. Include a brief introduction at the beginning of the table of contents to summarize the main topic.\n\n8. Add a conclusion section at the end to wrap up the key points.\n\nPlease format your response as follows:\n\nDocument Topic: [Brief statement of the main topic]\n\nTable of Contents:\n\nI. Introduction\n   A. [Subtopic]\n   B. [Subtopic]\n\nII. [Main Section 1]\n    A. [Subtopic]\n    B. [Subtopic]\n    C. [Subtopic]\n\nIII. [Main Section 2]\n     A. [Subtopic]\n     B. [Subtopic]\n\n[Continue with additional main sections as needed]\n\nX. Conclusion\n   A. [Summary of key points]\n   B. [Final thoughts or call to action]"
        }
      },
      "id": "aa854910-f9f0-47ff-841f-a9bc8a9e21f1",
      "name": "Content Analyst",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1460,
        340
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Write the title, the subtitle, the chapters details, the introduction, the conclusions, and an image prompt for a SEO-friendly article.  \n\nPlease use this set of topics to create chapters:\n{{ $json.output }}\n\n\nInstructions:\n- Place the article title in a JSON field called `title`\n- Place the subtitle in a JSON field called `subtitle`\n- Place the introduction in a JSON field called `introduction`\n- In the introduction introduce the topic that is then explored in depth in the rest of the text\n- The introduction should be around 100 words\n- Place the conclusions in a JSON field called `conclusions`\n- The conclusions should be around 100 words\n- Use the conclusions to sum all said in the article and offer a conclusion to the reader\n- The image prompt will be used to produce a photographic cover image for the article and should depict the topics discussed in the article\n- Place the image prompt in a JSON field called `imagePrompt`\n- There should be {{ $('n8n Form Trigger').item.json['Number of sections'].toString() }} chapters.\n- For each chapter provide a title and an exaustive prompt that will be used to write the chapter text.\n- Place the chapters in an array field called `chapters`\n- For each chapter provide the fields `title` and `prompt`\n- The chapters should follow a logical flow and not repeat the same concepts.\n- The chapters should be one related to the other and not isolated blocks of text. The text should be fluent and folow a linear logic.\n- Don't start the chapters with \"Chapter 1\", \"Chapter 2\", \"Chapter 3\"... just write the title of the chapter\n- For the title and the capthers' titles don't use colons (`:`)\n- For the text, use html format\n- Please write in a style that is {{ $('n8n Form Trigger').item.json.Tone }}\n- Go deep in the topic you treat, don't just throw some superficial info\n\n\nPlease use this text as the source for all the information needed to create the chapter:\n{{ $('Extract from File').item.json.text }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "maxTokens": 2048
        }
      },
      "id": "5597ed3c-a703-468d-9d6c-c0d4829531f0",
      "name": "Project Planner",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1860,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Extract PDF and analyze content ⛏️\n",
        "height": 430.74703747002076,
        "width": 524.2843893435219,
        "color": 5
      },
      "id": "62357de3-7394-4373-98ea-d3f6f9df40a2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1220,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4o-mini",
        "options": {}
      },
      "id": "d846632f-a35c-477f-8c10-2dee0cc31946",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2540,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Plan the work and Delegate to writers 📅\n",
        "height": 430.74703747002076,
        "width": 576.6288165877254,
        "color": 5
      },
      "id": "c98e61d6-91b1-48cf-b2c9-57a11411b52d",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1820,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Team of writers working on each chapter ✍️",
        "height": 427.13707697042037,
        "width": 648.8280265797307,
        "color": 5
      },
      "id": "058e8359-b676-4049-9487-418378457a0e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2480,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Editor polishing draft 📝 ",
        "height": 428.9420572202205,
        "width": 650.6330068295307,
        "color": 5
      },
      "id": "0fe518ba-6f00-480f-a520-4cc8fc73f9bd",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3200,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Publish to Ghost 📰",
        "height": 428.9420572202205,
        "width": 542.3341918415219,
        "color": 5
      },
      "id": "93ad3c42-64b4-468f-8ce3-259832a0168d",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3900,
        220
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=Write a chapter for the article: {{ $('Project Planner').item.json.message.content.title }}, {{ $('Project Planner').item.json.message.content.subtitle }}\n\nWrite the chapter titled {{ $json.title }}that {{ $json.prompt }}.\n\nDocument text as source of information to use to write the chapter:\n{{ $('Extract from File').item.json.text }}",
        "options": {
          "systemMessage": "=You are a skilled writer specializing in creating engaging and informative content. Your task is to write a chapter in the blog.\n\nGuidelines:\n- Just return the plain text for each chapter (no JSON structure).\n- Use html format for output\n- Don't add internal titles or headings.\n- The length of each chapther should be around {{ Math.round($('n8n Form Trigger').item.json['Number of words'] - 120)/ $('n8n Form Trigger').item.json['Number of sections']}} words long- Go deep in the topic you treat, don't just throw some superficial info\n{{ $itemIndex > 0 ? \"- The previous chapter talks about \" + $input.all()[$itemIndex-1].json.title : \"\" }}\n{{ $itemIndex > 0 ? \"- The promt for the previous chapter is \" + $input.all()[$itemIndex-1].json.prompt : \"\" }}\n{{ $itemIndex < $input.all().length ? \"- The following chapter will talk about \" + $input.all()[$itemIndex+1].json.title: \"\" }}\n{{ $itemIndex < $input.all().length ? \"- The prompt for the following chapter is \" + $input.all()[$itemIndex+1].json.prompt : \"\" }}\n- Consider the previous and following chapters what writing the text for this chapter. The text must be coherent with the previous and following chapters.\n- This chapter should not repeat the concepts already exposed in the previous chapter.\n- This chapter is a part of a larger article so don't include an introduction or conclusions. This chapter should merge with the rest of the article.\n- Please write in a style that is {{ $('n8n Form Trigger').item.json.Tone }}\n"
        }
      },
      "id": "a8120c8e-8763-42d7-8c7b-0c567484a121",
      "name": "Writers",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2560,
        340
      ],
      "retryOnFail": true,
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "content": "## Start here: Step-by Step Youtube Tutorial :star:\n\n[![Building an AI Crew to Analyze Financial Data with CrewAI and n8n](https://img.youtube.com/vi/4aKZrct0lzA/sddefault.jpg)](https://youtu.be/4aKZrct0lzA)\n\n\n\nhttps://n8n.io/workflows/2457-multi-agent-pdf-to-blog-content-generation/",
        "height": 604.624916073079,
        "width": 474.9059883840442,
        "color": 5
      },
      "id": "c154d369-0575-4b4c-a8ad-642903586385",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        380,
        220
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-10-16T13:35:41.000Z",
  "versionId": "cb0e65fe-2ce0-4e56-ae6a-a777c4c21c95"
}